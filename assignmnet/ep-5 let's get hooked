1.  Why use react: as all the things can be doable with html,css,js and react also usage react in the end. library/ framework provide a boiler plate for us as developers; so instead of developing any features from scratch;we can use the library that have the code; so it reduce the developer experience and save time;focusing on the business part of the application. it also help in performance,optimization and building our code,so that our application load fast and less in bytes. Hooks were introduced for functional components only to manage state and lifycycle as class components already have setState method and different lifycycle methods. Functional components are resuable,peformance efficient and optimized then class components.

    REASON::::::: simpler, more reusable, and more performant UI components. Functional components, along with hooks, have also helped to make it easier to manage stateful logic and improve code readability and maintainability.

2.  Folder structure depends on the yourself, but their are ways to define: routes based , file types based....(TOBE CONTINUE)

3.  Component file name must start with the function name;if it is uppercase create with uppercase filename...& vice versa.

4.  By default mean the file or module can export one things; if multiple things need to be exported use named export.

5.  default export is to use to export one thing which can be imported with any name as it will single exported from that module, whereas named export is use to export multiple things in this case default in not use as it show error `module cannot have multiple default export`, & this type of named export is imported inside {} with the named we have export it or if we want to change the name; use alias to use different name for it.
    default export/import :::: export default <Component> ----- import <Component> from 'path/to/';
    named export/import :::: export const <Component1>, export const <Component21>,.. multiple. ---- import {<Component1>,<Component2>} from 'path/to'; another way to export named const; export {<Componennt1>,<Component2>}.

6.  Never keep hard coded data in the components file; separete in some utils or constant File.

7.  If we update the variables inside our jsx; the UI will not got updated with the latest changes; so how we do that;
    React provides a very useful feature known as `Hooks`. it was introduced in react 16.8v; it help you to use stateful component without use class based component & also other feature. when functional component was introduced there was no way of updating the dom when the state of component changed; that why hooks where intoduced for functional component only not for class based component( as they already have features).

          `Hooks are noraml javascript function.`This function have some super powered (have some utilities). wriiten inside react. so when we install react we import all the utilities from react.
               Two most super useful hooks:
                  1. useState - superPowerFul state variable in react.
                  2. useEffect -

8.  if data changes ui should be changes (these problems solved by library/framework)

9.  local varriables: let resturants=[]; will be similar to react state variables i.e const [resturants] = useState([]); it similar how we assigned value to this variables(default value).
10. useState hooks return an array of default state variables and a function to modify the state variables; we can name this function anything; but the standard is use `set` prefix with state varibles name i,e.(res,setRes).

            why this state variable is supper powered; it sync the ui and data layer (it update the ui whenever statae variable changes).
            `Whenever the state variable update,react re-render the component.`
            `As soon as data layer update the ui layer will be updated, by re-rendering the component`.
            React will the DOM operations superfast and effecient.

11. Virtual DOM: is the representation of actual DOM, it is hold the js object.
12. Reconcilation : is the proccess of the updating the dom.
13. React Fiber : is the new way of finding the diff and updating the dom.
14. Diff algorithm: find out the difference btw the updated virtual DOM with previous virtual DOM. then it compute & update the actual dom

15. finding out the difference btw the html element is difficalut than to find it with js object. (and virtual dom is a js object.)

        see virtual dom is the js representation the acutal dom(in the form of object) ,only represent --- ex. react use jsx----that jsx turned into react.createElement---that will return an js obj--- that is the vir.DOM, the diff algorithm comparing the changes with updated dom to the previuos dom. and then update the actual dom. let go into more deep.. see whene the state variable (that superpowerd one remember?) is changed/updated, (react is watching your state variables) what it will do , it will re-render the component, and the new virtual dom is created, then the diff algorithm compares the previous virtual dom with the updated virtual dom & that process is known as reconcilation or react-fiber. after the comparsion , react-dom computes the changes that need to be done and it then update the actual dom, with the computed changes.
            that how our react is fast: in term of rendering/updating component.
